// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

model User {
  id         String      @id @default(cuid())
  username   String      @unique
  password   String
  name       String?
  image      String?
  dashboards Dashboard[]
  sessions   Session[]
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model Dashboard {
  id            String          @id @default(cuid())
  name          String
  description   String?
  userId        String
  user          User            @relation(fields: [userId], references: [id], onDelete: Cascade)
  sections      Section[]
  homeAssistant HomeAssistant[]
}

model Section {
  id          String    @id @default(cuid())
  title       String
  subtitle    String?
  width       String
  dashboardId String
  dashboard   Dashboard @relation(fields: [dashboardId], references: [id], onDelete: Cascade)
  widgets     Widget[]
}

model Widget {
  id        String           @id @default(cuid())
  type      String
  title     String?
  sectionId String
  section   Section          @relation(fields: [sectionId], references: [id], onDelete: Cascade)
  markdown  WidgetMarkdown[]
}

model WidgetMarkdown {
  widgetId String  @id
  Widget   Widget  @relation(fields: [widgetId], references: [id])
  content  String?
}

model HomeAssistant {
  id           String    @id @default(cuid())
  name         String?
  url          String
  accessToken  String?
  refreshToken String?
  clientId     String?
  expires      Int?
  expiresIn    Int?
  dashboardId  String    @unique
  dashboard    Dashboard @relation(fields: [dashboardId], references: [id], onDelete: Cascade)
}
