---
trigger:
  batch: true

pr:
  - "master"

pool:
  vmImage: "ubuntu-latest"

variables:
  - name: "yarnCachePath"
    value: "$(Pipeline.Workspace)/.yarn"
  - group: "github"
  - name: "githubRepository"
    value: "timmo001/home-panel"
  - group: "docker"
  - name: "dockerSlug"
    value: "home-panel"
  - name: "dockerTarget"
    value: "."
  - name: "arm64v8Base"
    value: "arm64v8/alpine:3.11.3"
  - name: "amd64Base"
    value: "amd64/alpine:3.11.3"
  - name: "armhfBase"
    value: "arm32v6/alpine:3.11.3"
  - name: "armv7Base"
    value: "arm32v7/alpine:3.11.3"

resources:
  repositories:
    - repository: "organization"
      type: "github"
      name: "timmo001/organization"
      endpoint: "timmo001"

stages:
  - stage: "Lint"
    dependsOn: []
    jobs:
      - template: azure-ci/lint/eslint.yml@organization
        parameters:
          path: $(System.DefaultWorkingDirectory)
      - template: azure-ci/lint/hadolint.yml@organization
        parameters:
          path: "Dockerfile"
      - template: azure-ci/lint/jsonlint.yml@organization
        parameters:
          path: $(System.DefaultWorkingDirectory)
      - template: azure-ci/lint/markdownlint.yml@organization
        parameters:
          path: $(System.DefaultWorkingDirectory)
      - template: azure-ci/lint/prettier.yml@organization
        parameters:
          path: $(System.DefaultWorkingDirectory)
      - template: azure-ci/lint/shellcheck.yml@organization
        parameters:
          path: $(System.DefaultWorkingDirectory)
      - template: azure-ci/lint/yamllint.yml@organization
        parameters:
          path: $(System.DefaultWorkingDirectory)
  - stage: "Build"
    dependsOn: []
    jobs:
      - template: azure-ci/build/react-app.yml@organization
      - template: azure-ci/build/node-ts.yml@organization
  - stage: "Docker"
    dependsOn:
      - "Lint"
      - "Build"
    condition: succeeded()
    jobs:
      - job: "Docker_Build"
        displayName: "Build"
        strategy:
          maxParallel: 4
          matrix:
            arm64v8:
              buildArch: "arm64v8"
              buildBase: $(arm64v8Base)
            amd64:
              buildArch: "amd64"
              buildBase: $(amd64Base)
            armhf:
              buildArch: "armhf"
              buildBase: $(armhfBase)
            armv7:
              buildArch: "armv7"
              buildBase: $(armv7Base)
        steps:
          - task: DownloadBuildArtifacts@0
            displayName: "Download Build Artifacts"
            inputs:
              artifactName: "app"
              downloadPath: $(System.DefaultWorkingDirectory)/build
          - task: DownloadBuildArtifacts@0
            displayName: "Download Build Artifacts"
            inputs:
              artifactName: "api"
              downloadPath: $(System.DefaultWorkingDirectory)/api/lib
          - template: azure-ci/docker/qemu-build.yml@organization
            parameters:
              buildArch: "$(buildArch)"
              buildBase: "$(buildBase)"
              githubRepository: "$(githubRepository)"
  - stage: "Test"
    dependsOn:
      - "Lint"
    condition: succeeded()
    jobs:
      - job: "Test_App"
        displayName: "App"
        steps:
          - task: Cache@2
            inputs:
              key: 'yarn | "$(Agent.OS)" | yarn.lock'
              path: $(yarnCachePath)
              restoreKeys: |
                yarn | "$(Agent.OS)"
                yarn
            displayName: "Cache Yarn Packages"
          - script: |
              yarn install --pure-lockfile --cache-folder $(yarnCachePath)
            displayName: "Install"
          - script: |
              yarn test
            displayName: "Test"
            continueOnError: true
          - task: PublishTestResults@2
            displayName: "Publish Tests"
            inputs:
              testResultsFormat: "JUnit"
              testResultsFiles: "**/junit.xml"
              failTaskOnFailedTests: true
              testRunTitle: "App"
          - task: PublishCodeCoverageResults@1
            displayName: "Publish Coverage"
            inputs:
              codeCoverageTool: "Cobertura"
              summaryFileLocation: "**/cobertura-coverage.xml"
              pathToSources: "src"
      - job: "Test_API"
        displayName: "API"
        steps:
          - task: Cache@2
            inputs:
              key: 'yarn | "$(Agent.OS)" | yarn.lock'
              path: $(yarnCachePath)
              restoreKeys: |
                yarn | "$(Agent.OS)"
                yarn
            displayName: "Cache Yarn Packages"
          - script: |
              cd api
              yarn install --pure-lockfile --cache-folder $(yarnCachePath)
            displayName: "Install"
          - script: |
              cd api
              yarn test
            displayName: "Test"
            continueOnError: true
          - task: PublishTestResults@2
            displayName: "Publish Tests"
            inputs:
              testResultsFormat: "JUnit"
              testResultsFiles: "**/junit.xml"
              failTaskOnFailedTests: true
              testRunTitle: "API"
          - task: PublishCodeCoverageResults@1
            displayName: "Publish Coverage"
            inputs:
              codeCoverageTool: "Cobertura"
              summaryFileLocation: "**/cobertura-coverage.xml"
              pathToSources: "src"
  - stage: "Pipeline_Passed"
    displayName: "Pipeline Passed"
    dependsOn:
      - "Lint"
      - "Build"
      - "Docker"
      - "Test"
    condition: succeeded()
    jobs:
      - job: "Pipeline_Passed_GitHub"
        displayName: "GitHub"
        steps:
          - task: GitHubComment@0
            displayName: "Send Comment"
            inputs:
              gitHubConnection: "timmo001"
              repositoryName: "$(Build.Repository.Name)"
              comment: |
                ✔️ Pipeline for build [$(Build.BuildNumber)](https://dev.azure.com/timmo0001/Home%20Panel/_build/results?buildId=$(Build.BuildId)&view=results) has passed.
  - stage: "Pipeline_Failed"
    displayName: "Pipeline Failed"
    dependsOn:
      - "Lint"
      - "Build"
      - "Docker"
      - "Test"
    condition: failed()
    jobs:
      - job: "Pipeline_Failed_GitHub"
        displayName: "GitHub"
        steps:
          - task: GitHubComment@0
            displayName: "Send Comment"
            inputs:
              gitHubConnection: "timmo001"
              repositoryName: "$(Build.Repository.Name)"
              comment: |
                ❌ Pipeline for build [$(Build.BuildNumber)](https://dev.azure.com/timmo0001/Home%20Panel/_build/results?buildId=$(Build.BuildId)&view=results) has failed.

                Check the logs to see what went wrong.
